// Generated by CoffeeScript 1.7.1
(function() {
  window.WeekPlanning = (function() {
    WeekPlanning._tableTemplate = "<table class=\"table table-bordered\">\n  <thead>\n  </thead>\n  <tbody>\n  </tbody>\n</table>";

    function WeekPlanning(node, options) {
      var cell, events, table, tableBody, tableHead, _i, _ref, _ref1, _results;
      this.node = node;
      if (options == null) {
        options = {};
      }
      if (node == null) {
        throw new Error("Don't know what element to build calendar on");
      }
      this.weekDays = options.weekDays || ["Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi"];
      this.hourRange = options.hourRange || [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];
      this.events = options.events;
      table = null;
      tableHead = null;
      tableBody = null;
      cell = null;
      this.hiddenEvents = {};
      events = options.events;
      if (options.timelapse) {
        this.hourRange = (function() {
          _results = [];
          for (var _i = _ref = options.timelapse.start, _ref1 = options.timelapse.end; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; _ref <= _ref1 ? _i++ : _i--){ _results.push(_i); }
          return _results;
        }).apply(this);
      }
      this.draw();
    }

    WeekPlanning.prototype.draw = function() {
      this.createPlanning();
      return this.drawEvents();
    };

    WeekPlanning.prototype.createPlanning = function() {
      var cell, colMd, day, hour, index, name, planningNodes, table, tableBody, tableHead, td, weekDaysLength, _i, _j, _len, _len1, _ref, _ref1;
      planningNodes = $(this.node);
      planningNodes.html(this._tableTemplate);
      table = $(planningNodes, 'table');
      tableHead = table.find('thead');
      tableBody = table.find('tbody');
      tableHead = table.find('thead');
      tableHead.html('<tr class="day-names"><th class="col-md-1"></th></tr>');
      weekDaysLength = this.weekDays.length;
      colMd = Math.floor(12 / weekDaysLength);
      _ref = this.weekDays;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        day = _ref[_i];
        tableHead.find('tr').append("<th class='col-md-" + colMd + " text-center'>" + day + "</th>");
      }
      _ref1 = this.hourRange;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        hour = _ref1[_j];
        tableBody.append("<tr class=\'hour hour-" + hour + "\'>\n  <td class='hour-name'>\n    " + hour + ":00\n  </td>\n  " + ((function() {
          var _k, _len2, _ref2, _results;
          _ref2 = this.weekDays;
          _results = [];
          for (index = _k = 0, _len2 = _ref2.length; _k < _len2; index = ++_k) {
            name = _ref2[index];
            _results.push("<td class=\'day day-" + index + "\'> <div>&nbsp;</div> <div>&nbsp;</div> </td>");
          }
          return _results;
        }).call(this)) + "\n</tr>");
      }
      td = $("tbody td.day-0").first();
      return cell = {
        height: td.height(),
        width: td.width()
      };
    };

    WeekPlanning.prototype.drawEvents = function() {
      var endHour, endMinute, event, eventHeight, eventNode, left, startHour, startMinute, time, top, _i, _len, _ref, _results;
      _ref = this.events;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        event = _ref[_i];
        if (!this.hiddenEvents[event.name]) {
          _results.push((function() {
            var _j, _len1, _ref1, _ref2, _ref3, _results1;
            _ref1 = event.times;
            _results1 = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              time = _ref1[_j];
              _ref2 = time.start.split(':'), startHour = _ref2[0], startMinute = _ref2[1];
              _ref3 = time.end.split(':'), endHour = _ref3[0], endMinute = _ref3[1];
              top = $("tr.hour-" + startHour).offset().top + cell.height - 1;
              left = $("td.day-" + time.day).first().offset().left + 1;
              eventNode = $("<div class='event'><span class='event-name'>" + event.name + "</span><br/>" + time.start + " &ndash; " + time.end + "</div>");
              eventHeight = 0;
              eventHeight += (parseInt(endHour) - parseInt(startHour)) * cell.height - 1;
              eventHeight += (((parseInt(endMinute) - parseInt(startMinute)) / 60) * 100) * (cell.height / 100) - 1;
              eventNode.css('top', "" + top + "px").css('left', "" + left + "px").css('background-color', event.color).width(cell.width + 1).height(eventHeight);
              _results1.push(table.append(eventNode));
            }
            return _results1;
          })());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return WeekPlanning;

  })();

}).call(this);
